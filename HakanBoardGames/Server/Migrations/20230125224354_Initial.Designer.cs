// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MudBlazorVisualDNA.Server.Data;

#nullable disable

namespace HakanBoardGames.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230125224354_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HakanBoardGames.Shared.BoardGameModels.BGBoardGame", b =>
                {
                    b.Property<Guid>("BGBoardGameDBId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Releasd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SavedToDatabaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tagline")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BGBoardGameDBId");

                    b.ToTable("BoardGames");
                });

            modelBuilder.Entity("HakanBoardGames.Shared.BoardGameModels.BGCategory", b =>
                {
                    b.Property<Guid>("BGCategoryDBId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BoardGameBGBoardGameDBId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BoardGameDBId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BGCategoryDBId");

                    b.HasIndex("BoardGameBGBoardGameDBId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("HakanBoardGames.Shared.BoardGameModels.BGCreator", b =>
                {
                    b.Property<Guid>("BGCreatorDBId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BoardGameBGBoardGameDBId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BoardGameDBId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BGCreatorDBId");

                    b.HasIndex("BoardGameBGBoardGameDBId");

                    b.ToTable("Creators");
                });

            modelBuilder.Entity("HakanBoardGames.Shared.BoardGameModels.BGPlayer", b =>
                {
                    b.Property<Guid>("BGPlayerDBId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BoardGameBGBoardGameDBId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BoardGameDBId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Max")
                        .HasColumnType("int");

                    b.Property<int>("Min")
                        .HasColumnType("int");

                    b.HasKey("BGPlayerDBId");

                    b.HasIndex("BoardGameBGBoardGameDBId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("HakanBoardGames.Shared.BoardGameModels.BGCategory", b =>
                {
                    b.HasOne("HakanBoardGames.Shared.BoardGameModels.BGBoardGame", "BoardGame")
                        .WithMany("Categories")
                        .HasForeignKey("BoardGameBGBoardGameDBId");

                    b.Navigation("BoardGame");
                });

            modelBuilder.Entity("HakanBoardGames.Shared.BoardGameModels.BGCreator", b =>
                {
                    b.HasOne("HakanBoardGames.Shared.BoardGameModels.BGBoardGame", "BoardGame")
                        .WithMany("Creators")
                        .HasForeignKey("BoardGameBGBoardGameDBId");

                    b.Navigation("BoardGame");
                });

            modelBuilder.Entity("HakanBoardGames.Shared.BoardGameModels.BGPlayer", b =>
                {
                    b.HasOne("HakanBoardGames.Shared.BoardGameModels.BGBoardGame", "BoardGame")
                        .WithMany("Players")
                        .HasForeignKey("BoardGameBGBoardGameDBId");

                    b.Navigation("BoardGame");
                });

            modelBuilder.Entity("HakanBoardGames.Shared.BoardGameModels.BGBoardGame", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Creators");

                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
